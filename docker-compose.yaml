version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8087:8080

  connect:
    # image: debezium/connect:latest
    build:
      context: debezium-jdbc
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    ports:
      - "8083:8083"
    depends_on:
      - kafka

  mytimescale:
    image: timescale/timescaledb:latest-pg13
    container_name: mytimescale
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=mydb
    ports:
      - 5433:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: [ "postgres", "-c", "wal_level=logical" ]
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bituclub.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8085:80"
    restart: unless-stopped

  mymongo:
    container_name: mymongo
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all
    volumes:
      - mongo-data:/data/db
    ports:
      - "27018:27017"
    restart: always
networks:
  db_stack_network:
    external: true

volumes:
  mongo-data:
    driver: local
